name: Docker Image CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install commit-analyzer
      run: |
        npm install --save-dev @semantic-release/commit-analyzer@11

    - name: Determine next version
      id: version
      run: |
        echo "Analyzing commits to determine next version..."
        # Use commit-analyzer directly without attempting to push to repository
        npx @semantic-release/commit-analyzer@11 -i main > /tmp/release-type.json || echo '{"type":"patch"}' > /tmp/release-type.json
        release_type=$(cat /tmp/release-type.json | grep -o '"type":"[^"]*"' | cut -d'"' -f4)

        # Get current version from git tags
        current_version=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        current_version=${current_version#v}

        # Parse version components
        IFS='.' read -r major minor patch <<< "$current_version"

        # Increment version based on commit type
        case $release_type in
          "major")
            major=$((major + 1))
            minor=0
            patch=0
            ;;
          "minor")
            minor=$((minor + 1))
            patch=0
            ;;
          *)
            patch=$((patch + 1))
            ;;
        esac

        version="$major.$minor.$patch"
        echo "release_type=$release_type" >> $GITHUB_OUTPUT
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "Version determined: $version (from $current_version due to $release_type change)"

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: stupean/terraform-yc-state
        tags: |
          type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}