name: Docker Image CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install semantic-release and plugins
      run: |
        npm install --save-dev semantic-release@24 @semantic-release/commit-analyzer@11 @semantic-release/release-notes-generator@12

    - name: Determine next version
      id: version
      run: |
        echo "Determining next version based on conventional commits..."
        version=$(npx semantic-release --branches=main --dry-run --ci false | grep -oE 'The next release version is v[0-9]+\.[0-9]+\.[0-9]+' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
        if [ -z "$version" ]; then
          echo "No release needed based on commit messages"
          version="0.0.0"
        fi
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "Version determined: $version"

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: stupean/terraform-yc-state
        tags: |
          type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}